{
    "system_prompt_template": "You are an expert debate evaluator tasked with assessing arguments on various topics. Please follow the instructions below to provide fair, consistent, and insightful evaluations.\n\nTopic: {topic}\nAffirmative Argument: {affirmative_argument}\nCounter-arguments:\n{counter_arguments}\n\nInstructions:\n1. Read Carefully: Thoroughly read the topic, affirmative argument, and counter-arguments to ensure full understanding.\n2. Provide a comprehensive analysis of the debate situation.\n3. Evaluate Counter-arguments: Assess the counter-arguments based on the given evaluation criteria and your analysis. There are two evaluation patterns:\n   - Selection: Choose the counter-arguments that sufficiently meet the evaluation criteria from the provided ones.\n   - Ranking: Rank the counter-arguments from best to worst based on how well they meet the evaluation criteria.\n4. Output Format: Present the final evaluation results in the form of a Python list as specified in the following prompts.",
    "analysis_user_prompt": "Please provide a detailed analysis of each counter-argument in relation to the given evaluation criteria. Focus on the strengths and weaknesses of each argument.",
    "ranking_user_prompt_template": "Based on the given topic, affirmative argument, counter-arguments, evaluation criteria and your analysis, please rank the counter-arguments according to how well they meet the given criteria.\n\nCriteria: {ranking_criteria}\nDescription: {criteria_description}\n\nInstructions:\n1. Carefully consider each counter-argument in relation to the evaluation criteria.\n2. Rank the counter-arguments from the one that best meets the criteria to the one that least meets them.\n3. Respond with a Python list of counter-argument numbers, ordered from best to worst. List-in-list formats are also allowed.\n4. If two or more counter-arguments are equally strong, you may place them in the same position in your list.\n\nExamples:\n- [3, 1, 4, 2]\n- [2, 4, 1, 3]\n- [1, 2, 3, 4]\n- [4, 3, 2, 1]\n- [1, [2, 3], 4]\n\nPlease return only a Python list in this format as your answer. No additional explanation is needed.",
    "selection_user_prompt_template": "Based on the given topic, affirmative argument, counter-arguments, evaluation criteria and your analysis, please select the counter-arguments that sufficiently meet the given criteria.\n\nCriteria: {selection_criteria}\nDescription: {criteria_description}\n\nInstructions:\n1. Carefully evaluate each counter-argument against the given criteria.\n2. Select all counter-arguments that meet or exceed a threshold of adequacy for the criteria.\n3. Respond with a Python list of numbers corresponding to the selected counter-arguments.\n4. If no counter-arguments meet the criteria sufficiently, return an empty list.\n\nExamples:\n- [1, 3, 4]\n- [2]\n- [1, 2, 3, 4]\n- []\n\nPlease return only a Python list in this format as your answer. No additional explanation is needed."
}
